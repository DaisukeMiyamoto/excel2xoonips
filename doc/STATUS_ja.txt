開発ステータス
--------------------

1. 処理の流れ
  a) コマンド起動
     - 入出力の指定
       * 入力 : Excel ファイル名
       * 出力 : XooNIps インポートファイル名
  b) Excel ファイルの読み込み
     - Excel ファイルを解析しファイル内のデータを読み込む
  c) テンポラリ領域の初期化
     - テンポラリディレクトリ(ルート) を作成
     - 添付ファイル用のディレクトリの作成
  d) アイテムタイプ定義ファイルの読み込み
     - inifile を読み込む
  e) アイテムタイプ毎の XML テンプレートの読み込み
     - xml テンプレートを読み込む
  f) xml ファイルの出力
     - b) で読み込んだデータを d) の書式に従い e) に適用
     - テンポラリ領域へ XML ファイルを出力
     - 必要に応じて添付ファイルのコピー
  f) ZIP ファイルの出力
     - テンポラリ領域の ZIP 圧縮し、ファイルに出力
  g) テンポラリ領域の開放
     - コピーした添付ファイルの削除
     - 添付ファイル用ディレクトリの削除
     - テンポラリディレクトリの削除

2. 必要な部品の作成
  a) 基本データ構造・アルゴリズム用のライブラリ
     - SATELLITE の低レベルライブラリ libsl4 の取り込み (DONE)
  b) Excel ファイルの読み込み
     - OLE2 用のライブラリ cole の取り込み (DONE)
     - BIFF の解析 (DONE : ただし、数式のセルは未対応)
     - 専用インターフェースの実装 (DONE)
       * Excel ファイルを指定することで、表形式のデータ構造を返す (DONE)
       * 表形式のデータ構造から任意の行：列の文字列データの読み出す (DONE)
       * 表形式のデータ構造の開放 (DONE)
  c) 正規表現処理
     - oniguruma の取り込み (DONE)
     - 専用インターフェースの実装 (DONE)
       * PHP の preg_match() に似た利用方法を提供 (DONE)
  d) ZIP 圧縮
     - zlib の取り込み (DONE)
     - 専用インターフェースの実装 (DONE)
       * 指定したディレクトリをトップディレクトリとして再帰的に圧縮し、
         指定したファイルに出力する (DONE)
  e) INI ファイルの読み込み処理
     - INI ファイルの書式の決定 (DONE)
     - 専用インターフェースの実装 (DONE)
       * INI ファイルを読み出し、書式情報のデータ構造を返す (DONE)
       * 書式情報のデータ構造の開放 (DONE)
  f) templateの変換処理
     - 専用インターフェースの実装
       * テンプレートファイルをメモリに読み込む (DONE)
       * 書式情報のデータ構造 と 表形式のデータ構造 を読み込んで全体
         を置換する (DONE)
       * XML ファイルを出力する (DONE)
  g) テンポラリ領域の処理
     - 専用インターフェースの実装 (DONE)
       * テンポラリ領域の作成 (DONE)
       * テンポラリ領域でのディレクトリの作成 (DONE)
       * テンポラリ領域へのファイルのコピー (DONE)
       * テンポラリ領域のファイルのオープン (DONE)
       * テンポラリ領域のファイルのクローズ (DONE)
       * テンポラリ領域の削除 (DONE)

3. 仕上げ
  a) 処理の流れに従い、各部品を組み合わせる (DONE)
  b) Windows 対応 (DONE)
  c) アイテムタイプ設定ファイルの準備 (DONE)
  d) ドキュメント整備
      - 設定ファイル解説 (DONE)
      - サンプルの充実 (DONE)
  e) リリース
